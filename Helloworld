Reference code for the question:

#include<bits/stdc++.h>
using namespace std;
int main(){
  cout << "Helloworld"<< endl;
  return 0;
}

My Code:

#include<iostream>

using namespace std;

struct letters{
    char body;
    string binary_system;
};

char litter_list_big[26] = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z' };
char letter_list_small[26] = { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' };

string letter_list_big_binary_system[26] = { "01000001", "01000010", "01000011", "01000100", "01000101", "01000110", "01000111", "01001000", "01001001", "01001010", "01001011", "01001100", "01001101", "01001110", "01001111", "01010000", "01010001", "01010010", "01010011", "01010100", "01010101", "01010110", "01010111", "01011000", "01011001", "01011010" };
string letter_list_small_binary_system[26] = { "01100001", "01100010", "01100011", "01100100", "01100101", "01100110", "01100111", "01101000", "01101001", "01101010", "01101011", "01101100", "01101101", "01101110", "01101111", "01110000", "01110001", "01110010", "01110011", "01110100", "01110101", "01110110", "01110111", "01111000", "01111001", "01111010" };

letters corresponding_big[26];
letters corresponding_small[26];

string target[10] = { "01001000", "01100101", "01101100", "01101100", "01101111", "01110111", "01101111", "01110010", "01101100", "01100100" };

string target_string = "";
string temporary_string = "";

int main(){

    for(int i = 0 ; i <= 25 ; i ++){

        corresponding_big[i].body = litter_list_big[i];
        corresponding_big[i].binary_system = letter_list_big_binary_system[i];

    }

    for(int i = 0 ; i <= 25 ; i ++){

        corresponding_small[i].body = letter_list_small[i];
        corresponding_small[i].binary_system = letter_list_small_binary_system[i];

    }

    for(int i = 0 ; i < 10 ; i ++) {

        for (int j = 0; j < 26; j++) {

            if (target[i] == corresponding_big[j].binary_system) {
                
                temporary_string = corresponding_big[j].body;
                target_string += temporary_string;
                break;

            } else if (target[i] == corresponding_small[j].binary_system) {

                temporary_string = corresponding_small[j].body;
                target_string += temporary_string;
                break;

            }

        }

    }

    cout << target_string << endl;
    target_string.clear();
    temporary_string.clear();

    return 0;
}

It's outrageousï¼ŒVery real.
